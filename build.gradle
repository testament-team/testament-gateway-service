buildscript {
    ext {
        springBootVersion = "1.5.9.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

group 'dev.testament'
version '0.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter-zuul")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
//    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.7'
//    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR2"
    }
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task dockerBuild(type: Exec) {
    commandLine "docker", "build", "-t", "testament-gateway-service", "."
}

task dockerRun(type: Exec) {
    commandLine "docker", "run", "--rm", "-p", "8080:8080", "--name", "testament-gateway-service", "testament-gateway-service"
}

task dockerStop(type: Exec) {
    commandLine "docker", "rm", "-f", "testament-gateway-service"
    ignoreExitValue=true
}
